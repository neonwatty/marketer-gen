## Context

- Task ID: "$ARGUMENTS"
- Current git status: !`git status --porcelain`

## Your task

Track files changed during task implementation.

Usage: 
- `/task-track-files start <task-id>` - Begin tracking files for a task
- `/task-track-files finish <task-id>` - End tracking and log changes to task

Steps:
1. Parse the command arguments to determine action (start/finish) and task ID
2. If action is "start":
   - Run `git status --porcelain` to capture current state
   - Save baseline to `.taskmaster/.file-tracking/<task-id>.baseline`
   - Set task status to in-progress: `task-master set-status --id=<task-id> --status=in-progress`
3. If action is "finish":
   - Run `git status --porcelain` to capture final state
   - Compare with baseline from `.taskmaster/.file-tracking/<task-id>.baseline`
   - Identify added, modified, and deleted files
   - Generate summary of file changes
   - Update task with file changes: `task-master update-subtask --id=<task-id> --prompt="Files changed: [summary]"`
   - Set task status to done: `task-master set-status --id=<task-id> --status=done`
   - Clean up baseline file
4. Create tracking directory if it doesn't exist: `mkdir -p .taskmaster/.file-tracking`