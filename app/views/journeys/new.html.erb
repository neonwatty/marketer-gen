<% content_for :title, "New Journey" %>

<div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
  <div class="py-6">
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-3xl font-bold text-gray-900">Create New Journey</h1>
        <p class="mt-2 text-sm text-gray-600">Build a customer journey from scratch or start with a proven template</p>
      </div>
      <%= link_to "Back to Journeys", journeys_path, class: "text-indigo-600 hover:text-indigo-900 font-medium" %>
    </div>
  </div>

  <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
    <!-- Template Selection Sidebar -->
    <div class="lg:col-span-1">
      <div class="bg-white shadow rounded-lg sticky top-6">
        <div class="px-4 py-5 sm:p-6">
          <h3 class="text-lg font-medium text-gray-900 mb-4">Journey Templates</h3>
          
          <!-- Template Selection -->
          <div id="template-selection" class="space-y-3">
            <!-- Start from Scratch Option -->
            <div class="template-option border-2 border-indigo-200 bg-indigo-50 rounded-lg p-3 cursor-pointer" data-template="scratch" data-selected="true">
              <div class="flex items-center">
                <div class="flex-shrink-0">
                  <svg class="h-6 w-6 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                  </svg>
                </div>
                <div class="ml-3">
                  <p class="text-sm font-medium text-indigo-900">Start from Scratch</p>
                  <p class="text-xs text-indigo-700">Build your own journey</p>
                </div>
              </div>
            </div>

            <!-- Template Categories -->
            <% if defined?(JourneyTemplate) %>
              <% JourneyTemplate.active.includes(:original_template).group_by(&:category).each do |category, templates| %>
                <div class="template-category">
                  <h4 class="text-sm font-medium text-gray-900 mb-2 capitalize"><%= category.humanize %></h4>
                  <div class="space-y-2">
                    <% templates.first(3).each do |template| %>
                      <div class="template-option border border-gray-200 rounded-lg p-3 cursor-pointer hover:border-indigo-300 hover:bg-indigo-50" 
                           data-template="<%= template.id %>"
                           data-template-name="<%= template.name %>"
                           data-template-description="<%= template.description %>"
                           data-campaign-type="<%= template.campaign_type %>"
                           data-step-count="<%= template.step_count %>">
                        <div class="flex items-start">
                          <div class="flex-shrink-0">
                            <div class="h-6 w-6 rounded-full bg-gray-100 flex items-center justify-center">
                              <span class="text-xs font-medium text-gray-600"><%= template.step_count %></span>
                            </div>
                          </div>
                          <div class="ml-3 flex-1">
                            <p class="text-sm font-medium text-gray-900 truncate"><%= template.name %></p>
                            <p class="text-xs text-gray-500 mt-1 line-clamp-2"><%= truncate(template.description, length: 60) %></p>
                            <div class="mt-2 flex items-center text-xs text-gray-400">
                              <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m-8 4h8m-8 4h8M3 7h1m0 0L5 6m-1 1L5 8m-1-1h6m-6 4h1m0 0l1-1m-1 1l1 1m-1-1h6m-6 4h1m0 0l1-1m-1 1l1 1m-1-1h6"/>
                              </svg>
                              <%= template.usage_count %> uses
                            </div>
                          </div>
                        </div>
                      </div>
                    <% end %>
                  </div>
                </div>
              <% end %>
            <% end %>

            <!-- View All Templates Link -->
            <div class="pt-3 border-t border-gray-200">
              <%= link_to "View All Templates", journey_templates_path, 
                  class: "text-sm text-indigo-600 hover:text-indigo-900 font-medium" %>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Main Form -->
    <div class="lg:col-span-3">
      <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-8">
          <div id="template-preview" class="hidden mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
            <div class="flex items-start">
              <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-blue-400" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/>
                </svg>
              </div>
              <div class="ml-3 flex-1">
                <h4 class="text-sm font-medium text-blue-900" id="template-preview-title">Template Selected</h4>
                <p class="text-sm text-blue-800 mt-1" id="template-preview-description">This template will pre-fill your journey details.</p>
                <div class="mt-2 flex items-center text-xs text-blue-700">
                  <span id="template-preview-steps">0 steps</span>
                  <span class="mx-2">â€¢</span>
                  <span id="template-preview-type">No type</span>
                </div>
              </div>
              <button type="button" id="clear-template" class="ml-4 text-blue-600 hover:text-blue-800">
                <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                </svg>
              </button>
            </div>
          </div>

          <%= form_with model: @journey, local: true, class: "space-y-6" do |form| %>
            <%= hidden_field_tag 'template_id', '', id: 'selected_template_id' %>
            
            <% if @journey.errors.any? %>
              <div class="rounded-md bg-red-50 p-4">
                <div class="flex">
                  <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                    </svg>
                  </div>
                  <div class="ml-3">
                    <h3 class="text-sm font-medium text-red-800">
                      <%= pluralize(@journey.errors.count, "error") %> prohibited this journey from being saved:
                    </h3>
                    <div class="mt-2 text-sm text-red-700">
                      <ul class="list-disc pl-5 space-y-1">
                        <% @journey.errors.full_messages.each do |message| %>
                          <li><%= message %></li>
                        <% end %>
                      </ul>
                    </div>
                  </div>
                </div>
              </div>
            <% end %>

            <!-- Basic Information Section -->
            <div class="bg-gray-50 rounded-lg p-6">
              <h3 class="text-lg font-medium text-gray-900 mb-4">Basic Information</h3>
              
              <div class="space-y-4">
                <div>
                  <%= form.label :name, class: "block text-sm font-medium text-gray-700" %>
                  <%= form.text_field :name, class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm", placeholder: "Enter journey name" %>
                  <p class="mt-1 text-xs text-gray-500">Choose a descriptive name that reflects the journey's purpose</p>
                </div>

                <div>
                  <%= form.label :description, class: "block text-sm font-medium text-gray-700" %>
                  <%= form.text_area :description, rows: 4, class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm", placeholder: "Describe the purpose and flow of this journey" %>
                  <div class="mt-1 flex items-center justify-between">
                    <p class="text-xs text-gray-500">Provide a clear overview of what this journey accomplishes</p>
                    <span class="text-xs text-gray-400" id="description-counter">0/500</span>
                  </div>
                </div>

                <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                  <div>
                    <%= form.label :campaign_type, class: "block text-sm font-medium text-gray-700" %>
                    <%= form.select :campaign_type, 
                        options_for_select([['Select a type', '']] + Journey::CAMPAIGN_TYPES.map { |type| [type.humanize, type] }, @journey.campaign_type),
                        {},
                        { class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm", id: "campaign_type_field" } %>
                    <p class="mt-1 text-xs text-gray-500">This helps determine relevant templates and suggestions</p>
                  </div>

                  <div>
                    <%= form.label :status, class: "block text-sm font-medium text-gray-700" %>
                    <%= form.select :status,
                        options_for_select([
                          ['Draft - Work in progress', 'draft'],
                          ['Published - Live and active', 'published']
                        ], @journey.status || 'draft'),
                        {},
                        { class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" } %>
                  </div>
                </div>
              </div>
            </div>

            <!-- Target Audience Section -->
            <div class="bg-gray-50 rounded-lg p-6">
              <h3 class="text-lg font-medium text-gray-900 mb-4">Target Audience</h3>
              
              <div class="space-y-4">
                <div>
                  <%= form.label :target_audience, "Audience Description", class: "block text-sm font-medium text-gray-700" %>
                  <%= form.text_area :target_audience, rows: 3, class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm", placeholder: "Describe your target audience - demographics, behaviors, needs, pain points..." %>
                  <p class="mt-1 text-xs text-gray-500">The more specific you are, the better we can tailor journey suggestions</p>
                </div>

                <!-- Dynamic Audience Insights -->
                <div id="audience-insights" class="hidden p-4 bg-blue-50 border border-blue-200 rounded-lg">
                  <h4 class="text-sm font-medium text-blue-900 mb-2">Audience Insights</h4>
                  <div id="audience-suggestions" class="text-sm text-blue-800"></div>
                </div>
              </div>
            </div>

            <!-- Journey Goals Section -->
            <div class="bg-gray-50 rounded-lg p-6">
              <h3 class="text-lg font-medium text-gray-900 mb-4">Journey Goals</h3>
              
              <div class="space-y-4">
                <div>
                  <%= form.label :goals, "Primary Goals", class: "block text-sm font-medium text-gray-700" %>
                  <div id="goals-container" class="space-y-2 mt-2">
                    <% (@journey.goals || []).each_with_index do |goal, index| %>
                      <div class="goal-item flex items-center space-x-2">
                        <input type="text" name="journey[goals][]" value="<%= goal %>" 
                               class="flex-1 border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                               placeholder="Enter a specific goal...">
                        <button type="button" class="remove-goal text-red-600 hover:text-red-800">
                          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                          </svg>
                        </button>
                      </div>
                    <% end %>
                    
                    <% if (@journey.goals || []).empty? %>
                      <div class="goal-item flex items-center space-x-2">
                        <input type="text" name="journey[goals][]" value="" 
                               class="flex-1 border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                               placeholder="Enter a specific goal...">
                        <button type="button" class="remove-goal text-red-600 hover:text-red-800">
                          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                          </svg>
                        </button>
                      </div>
                    <% end %>
                  </div>
                  
                  <button type="button" id="add-goal" class="mt-2 text-sm text-indigo-600 hover:text-indigo-800 font-medium">
                    + Add another goal
                  </button>
                  
                  <p class="mt-2 text-xs text-gray-500">Define specific, measurable objectives for this journey</p>
                </div>

                <!-- Suggested Goals -->
                <div id="suggested-goals" class="hidden">
                  <h4 class="text-sm font-medium text-gray-700 mb-2">Suggested Goals</h4>
                  <div class="flex flex-wrap gap-2" id="goal-suggestions">
                    <!-- Dynamic suggestions will be inserted here -->
                  </div>
                </div>
              </div>
            </div>

            <!-- Associations Section -->
            <div class="bg-gray-50 rounded-lg p-6">
              <h3 class="text-lg font-medium text-gray-900 mb-4">Associations</h3>
              
              <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                <% if @campaigns.any? %>
                  <div>
                    <%= form.label :campaign_id, "Campaign", class: "block text-sm font-medium text-gray-700" %>
                    <%= form.select :campaign_id,
                        options_for_select([['No campaign', '']] + @campaigns.map { |c| ["#{c.name} (#{c.campaign_type&.humanize})", c.id] }, @journey.campaign_id),
                        {},
                        { class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" } %>
                    <p class="mt-1 text-xs text-gray-500">Link this journey to an existing campaign</p>
                  </div>
                <% else %>
                  <div class="text-center py-4 border-2 border-dashed border-gray-300 rounded-lg">
                    <svg class="mx-auto h-6 w-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                    </svg>
                    <p class="mt-1 text-xs text-gray-500">No campaigns available</p>
                    <%= link_to "Create Campaign", "#", class: "text-xs text-indigo-600 hover:text-indigo-800" %>
                  </div>
                <% end %>

                <% if @brands.any? %>
                  <div>
                    <%= form.label :brand_id, "Brand", class: "block text-sm font-medium text-gray-700" %>
                    <%= form.select :brand_id,
                        options_for_select([['No brand', '']] + @brands.map { |b| ["#{b.name} (#{b.industry&.humanize})", b.id] }, @journey.brand_id),
                        {},
                        { class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm", id: "brand_field" } %>
                    <p class="mt-1 text-xs text-gray-500">Brand compliance will be checked automatically</p>
                  </div>
                <% else %>
                  <div class="text-center py-4 border-2 border-dashed border-gray-300 rounded-lg">
                    <svg class="mx-auto h-6 w-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                    </svg>
                    <p class="mt-1 text-xs text-gray-500">No brands available</p>
                    <%= link_to "Create Brand", "#", class: "text-xs text-indigo-600 hover:text-indigo-800" %>
                  </div>
                <% end %>
              </div>
            </div>

            <!-- Form Actions -->
            <div class="flex justify-between items-center pt-6 border-t border-gray-200">
              <div class="text-sm text-gray-500">
                <svg class="inline w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                </svg>
                You can always modify these details later
              </div>
              
              <div class="flex space-x-3">
                <%= link_to "Cancel", journeys_path, class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
                
                <div class="flex">
                  <%= form.submit "Save as Draft", name: "draft", class: "mr-2 inline-flex justify-center py-2 px-4 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
                  <%= form.submit "Create & Build Steps", class: "inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
                </div>
              </div>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- JavaScript for Dynamic Functionality -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Template selection functionality
  const templateOptions = document.querySelectorAll('.template-option');
  const templatePreview = document.getElementById('template-preview');
  const selectedTemplateId = document.getElementById('selected_template_id');
  const clearTemplateBtn = document.getElementById('clear-template');
  
  // Form fields that can be auto-filled
  const nameField = document.getElementById('journey_name');
  const descriptionField = document.getElementById('journey_description');
  const campaignTypeField = document.getElementById('campaign_type_field');
  
  templateOptions.forEach(option => {
    option.addEventListener('click', function() {
      // Remove selection from all options
      templateOptions.forEach(opt => {
        opt.classList.remove('border-indigo-200', 'bg-indigo-50', 'border-2');
        opt.classList.add('border-gray-200');
        opt.setAttribute('data-selected', 'false');
      });
      
      // Select current option
      this.classList.add('border-indigo-200', 'bg-indigo-50', 'border-2');
      this.classList.remove('border-gray-200');
      this.setAttribute('data-selected', 'true');
      
      const templateId = this.getAttribute('data-template');
      
      if (templateId === 'scratch') {
        // Clear template selection
        selectedTemplateId.value = '';
        templatePreview.classList.add('hidden');
      } else {
        // Set template data
        selectedTemplateId.value = templateId;
        
        // Update preview
        const templateName = this.getAttribute('data-template-name');
        const templateDescription = this.getAttribute('data-template-description');
        const stepCount = this.getAttribute('data-step-count');
        const campaignType = this.getAttribute('data-campaign-type');
        
        document.getElementById('template-preview-title').textContent = templateName;
        document.getElementById('template-preview-description').textContent = templateDescription;
        document.getElementById('template-preview-steps').textContent = stepCount + ' steps';
        document.getElementById('template-preview-type').textContent = campaignType ? campaignType.replace('_', ' ') : 'No type';
        
        templatePreview.classList.remove('hidden');
        
        // Auto-fill form if fields are empty
        if (!nameField.value) {
          nameField.value = templateName + ' - ' + new Date().toLocaleDateString();
        }
        if (!descriptionField.value) {
          descriptionField.value = templateDescription;
        }
        if (!campaignTypeField.value && campaignType) {
          campaignTypeField.value = campaignType;
          triggerCampaignTypeChange();
        }
      }
    });
  });
  
  // Clear template selection
  clearTemplateBtn.addEventListener('click', function() {
    document.querySelector('[data-template="scratch"]').click();
  });
  
  // Dynamic goals management
  const goalsContainer = document.getElementById('goals-container');
  const addGoalBtn = document.getElementById('add-goal');
  
  function addGoalField(value = '') {
    const goalItem = document.createElement('div');
    goalItem.className = 'goal-item flex items-center space-x-2';
    goalItem.innerHTML = `
      <input type="text" name="journey[goals][]" value="${value}" 
             class="flex-1 border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
             placeholder="Enter a specific goal...">
      <button type="button" class="remove-goal text-red-600 hover:text-red-800">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
        </svg>
      </button>
    `;
    goalsContainer.appendChild(goalItem);
    
    // Add remove functionality
    goalItem.querySelector('.remove-goal').addEventListener('click', function() {
      if (goalsContainer.children.length > 1) {
        goalItem.remove();
      }
    });
  }
  
  addGoalBtn.addEventListener('click', function() {
    addGoalField();
  });
  
  // Character counter for description
  const descField = document.getElementById('journey_description');
  const counter = document.getElementById('description-counter');
  
  if (descField && counter) {
    descField.addEventListener('input', function() {
      const length = this.value.length;
      counter.textContent = length + '/500';
      
      if (length > 450) {
        counter.classList.add('text-red-600');
      } else {
        counter.classList.remove('text-red-600');
      }
    });
  }
  
  // Campaign type change suggestions
  function triggerCampaignTypeChange() {
    const campaignType = campaignTypeField.value;
    const suggestedGoals = document.getElementById('suggested-goals');
    const goalSuggestions = document.getElementById('goal-suggestions');
    
    if (campaignType) {
      // Show suggested goals based on campaign type
      const suggestions = getGoalSuggestions(campaignType);
      
      if (suggestions.length > 0) {
        goalSuggestions.innerHTML = suggestions.map(goal => 
          `<button type="button" class="goal-suggestion px-3 py-1 text-xs bg-indigo-100 text-indigo-800 rounded-full hover:bg-indigo-200" data-goal="${goal}">${goal}</button>`
        ).join('');
        
        suggestedGoals.classList.remove('hidden');
        
        // Add click handlers for suggestions
        goalSuggestions.querySelectorAll('.goal-suggestion').forEach(btn => {
          btn.addEventListener('click', function() {
            const goal = this.getAttribute('data-goal');
            const emptyGoalInput = goalsContainer.querySelector('input[value=""]');
            
            if (emptyGoalInput) {
              emptyGoalInput.value = goal;
            } else {
              addGoalField(goal);
            }
            
            this.remove();
          });
        });
      }
    } else {
      suggestedGoals.classList.add('hidden');
    }
  }
  
  campaignTypeField.addEventListener('change', triggerCampaignTypeChange);
  
  function getGoalSuggestions(campaignType) {
    const suggestions = {
      'email_marketing': ['Increase email open rates', 'Improve click-through rates', 'Reduce unsubscribe rate', 'Build subscriber list'],
      'social_media': ['Increase brand awareness', 'Drive website traffic', 'Generate leads', 'Improve engagement'],
      'content_marketing': ['Educate target audience', 'Generate qualified leads', 'Establish thought leadership', 'Improve SEO rankings'],
      'lead_nurturing': ['Qualify leads', 'Accelerate sales cycle', 'Increase conversion rates', 'Reduce customer acquisition cost'],
      'customer_onboarding': ['Reduce time to value', 'Increase product adoption', 'Minimize churn', 'Improve user satisfaction'],
      'retention': ['Increase customer lifetime value', 'Reduce churn rate', 'Drive repeat purchases', 'Build customer loyalty'],
      'referral': ['Increase referral rate', 'Acquire new customers', 'Reward loyal customers', 'Build brand advocates']
    };
    
    return suggestions[campaignType] || [];
  }
  
  // Initialize remove goal handlers for existing goals
  goalsContainer.querySelectorAll('.remove-goal').forEach(btn => {
    btn.addEventListener('click', function() {
      if (goalsContainer.children.length > 1) {
        btn.closest('.goal-item').remove();
      }
    });
  });
});
</script>