openapi: 3.0.3
info:
  title: Marketer Gen Journey Builder API
  description: |
    Comprehensive RESTful API for journey management and marketing automation.
    
    ## Authentication
    The API uses session-based authentication. You must be logged in to access these endpoints.
    
    ## Versioning
    This API uses versioning in the URL path. Current version is v1.
    
    ## Error Handling
    All endpoints return standardized error responses with appropriate HTTP status codes.
    
    ## Pagination
    List endpoints support pagination with `page` and `per_page` parameters.
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: /api/v1
    description: Version 1 API

paths:
  # Journey Management API
  /journeys:
    get:
      summary: List journeys
      description: Retrieve a paginated list of user's journeys with optional filtering
      tags:
        - Journeys
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [draft, published, archived]
          description: Filter by journey status
        - name: campaign_type
          in: query
          schema:
            type: string
          description: Filter by campaign type
        - name: campaign_id
          in: query
          schema:
            type: integer
          description: Filter by campaign ID
        - name: sort_by
          in: query
          schema:
            type: string
            enum: [name, created_at, updated_at, status]
          description: Sort field
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 25
          description: Items per page
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/JourneySummary'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
        '401':
          $ref: '#/components/responses/Unauthorized'
    
    post:
      summary: Create journey
      description: Create a new journey
      tags:
        - Journeys
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JourneyInput'
      responses:
        '201':
          description: Journey created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/JourneyDetail'
                  message:
                    type: string
                    example: "Journey created successfully"
        '422':
          $ref: '#/components/responses/ValidationError'

  /journeys/{id}:
    get:
      summary: Get journey details
      description: Retrieve detailed information about a specific journey
      tags:
        - Journeys
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Journey ID
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/JourneyDetail'
        '404':
          $ref: '#/components/responses/NotFound'

  # Analytics API
  /analytics/overview:
    get:
      summary: Get analytics overview
      description: Retrieve overall analytics summary for the user
      tags:
        - Analytics
      parameters:
        - name: days
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 365
            default: 7
          description: Number of days to include in analysis
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/AnalyticsOverview'

  # Templates API
  /templates:
    get:
      summary: List journey templates
      description: Browse available journey templates with filtering options
      tags:
        - Templates
      parameters:
        - name: category
          in: query
          schema:
            type: string
          description: Filter by template category
        - name: industry
          in: query
          schema:
            type: string
          description: Filter by industry
        - name: search
          in: query
          schema:
            type: string
          description: Search in name and description
        - name: sort_by
          in: query
          schema:
            type: string
            enum: [name, category, popularity, rating, created_at]
          description: Sort field
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TemplateSummary'

  # Campaigns API
  /campaigns:
    get:
      summary: List campaigns
      description: Retrieve user's campaigns with filtering options
      tags:
        - Campaigns
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CampaignSummary'

  # Personas API
  /personas:
    get:
      summary: List personas
      description: Retrieve user's personas with filtering options
      tags:
        - Personas
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PersonaSummary'

  # AI Suggestions API
  /journey_suggestions:
    get:
      summary: Get journey suggestions
      description: Generate AI-powered suggestions for journey improvement
      tags:
        - AI Suggestions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      suggestions:
                        type: array
                        items:
                          $ref: '#/components/schemas/Suggestion'

components:
  schemas:
    JourneySummary:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Welcome Email Series"
        description:
          type: string
          example: "Automated welcome sequence for new subscribers"
        status:
          type: string
          enum: [draft, published, archived]
          example: "published"
        campaign_type:
          type: string
          example: "email_nurture"
        campaign_id:
          type: integer
          nullable: true
          example: 5
        campaign_name:
          type: string
          nullable: true
          example: "Q4 Campaign"
        persona_name:
          type: string
          nullable: true
          example: "Young Professional"
        step_count:
          type: integer
          example: 7
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        published_at:
          type: string
          format: date-time
          nullable: true
        performance_score:
          type: number
          format: float
          example: 78.5

    JourneyDetail:
      allOf:
        - $ref: '#/components/schemas/JourneySummary'
        - type: object
          properties:
            target_audience:
              type: string
              example: "New subscribers interested in marketing automation"
            goals:
              type: array
              items:
                type: string
              example: ["Increase engagement", "Drive conversions"]
            metadata:
              type: object
              example: {}
            settings:
              type: object
              example: {}
            campaign:
              $ref: '#/components/schemas/CampaignSummary'
            persona:
              $ref: '#/components/schemas/PersonaSummary'
            steps_by_stage:
              type: object
              example: {"awareness": 2, "consideration": 3, "conversion": 2}
            ab_test_status:
              type: object
              example: {"status": "not_in_test"}

    JourneyInput:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "New Customer Onboarding"
        description:
          type: string
          example: "Complete onboarding flow for new customers"
        campaign_type:
          type: string
          example: "customer_retention"
        target_audience:
          type: string
          example: "New customers who signed up in the last 24 hours"
        status:
          type: string
          enum: [draft, published, archived]
          default: "draft"
        campaign_id:
          type: integer
          nullable: true
        goals:
          type: array
          items:
            type: string
        metadata:
          type: object
          default: {}
        settings:
          type: object
          default: {}

    AnalyticsOverview:
      type: object
      properties:
        summary:
          type: object
          properties:
            total_journeys:
              type: integer
              example: 15
            active_journeys:
              type: integer
              example: 8
            total_executions:
              type: integer
              example: 1250
            total_campaigns:
              type: integer
              example: 5
            total_personas:
              type: integer
              example: 3
        journeys:
          type: object
          properties:
            average_conversion_rate:
              type: number
              format: float
              example: 12.5
            average_engagement_score:
              type: number
              format: float
              example: 75.2
            total_executions:
              type: integer
              example: 1250
            completed_executions:
              type: integer
              example: 1050
            top_performing:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  conversion_rate:
                    type: number
                    format: float

    TemplateSummary:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "E-commerce Welcome Series"
        description:
          type: string
          example: "Perfect for onboarding new e-commerce customers"
        category:
          type: string
          example: "E-commerce"
        industry:
          type: string
          example: "Retail"
        author:
          type: string
          example: "John Doe"
        usage_count:
          type: integer
          example: 156
        rating:
          type: number
          format: float
          nullable: true
          example: 4.7
        total_ratings:
          type: integer
          example: 23
        difficulty:
          type: string
          example: "Intermediate"
        estimated_duration:
          type: string
          example: "2 weeks"
        step_count:
          type: integer
          example: 8

    CampaignSummary:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Q4 Holiday Campaign"
        description:
          type: string
          example: "Holiday season promotional campaign"
        campaign_type:
          type: string
          example: "seasonal_promotion"
        industry:
          type: string
          example: "Retail"
        status:
          type: string
          enum: [draft, active, paused, completed]
          example: "active"
        persona_name:
          type: string
          nullable: true
          example: "Holiday Shoppers"
        journey_count:
          type: integer
          example: 3
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        budget:
          type: number
          format: decimal
          nullable: true
          example: 5000.00

    PersonaSummary:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Young Professional"
        description:
          type: string
          example: "Career-focused millennials in urban areas"
        age_range:
          type: string
          example: "25-35"
        location:
          type: string
          example: "Urban"
        industry:
          type: string
          example: "Technology"
        campaign_count:
          type: integer
          example: 2

    Suggestion:
      type: object
      properties:
        id:
          type: string
          example: "welcome-email-001"
        type:
          type: string
          example: "step"
        title:
          type: string
          example: "Welcome Email Sequence"
        description:
          type: string
          example: "Start with a personalized welcome email to introduce your brand"
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          example: 0.95
        data:
          type: object
          properties:
            step_type:
              type: string
              example: "email_sequence"
            stage:
              type: string
              example: "awareness"
            timing:
              type: string
              example: "immediate"

    PaginationMeta:
      type: object
      properties:
        pagination:
          type: object
          properties:
            current_page:
              type: integer
              example: 1
            per_page:
              type: integer
              example: 25
            total_count:
              type: integer
              example: 150
            total_pages:
              type: integer
              example: 6
            has_next_page:
              type: boolean
              example: true
            has_previous_page:
              type: boolean
              example: false

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "An error occurred"
        code:
          type: string
          example: "VALIDATION_ERROR"
        errors:
          type: object
          example: {"name": ["can't be blank"]}

  responses:
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Authentication required"
              code:
                type: string
                example: "AUTHENTICATION_REQUIRED"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Resource not found"
              code:
                type: string
                example: "RESOURCE_NOT_FOUND"

    ValidationError:
      description: Validation failed
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Error'
              - type: object
                properties:
                  message:
                    example: "Validation failed"
                  code:
                    example: "VALIDATION_ERROR"

  securitySchemes:
    sessionAuth:
      type: apiKey
      in: cookie
      name: session_id
      description: Session-based authentication using cookies

security:
  - sessionAuth: []

tags:
  - name: Journeys
    description: Journey management operations
  - name: Analytics
    description: Performance metrics and analytics
  - name: Templates
    description: Journey template operations
  - name: Campaigns
    description: Campaign management
  - name: Personas
    description: Persona management
  - name: AI Suggestions
    description: AI-powered journey suggestions